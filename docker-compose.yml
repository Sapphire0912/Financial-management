services:
  backend-financial:
    container_name: backend-financial
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "32220:8000"
    volumes:
      - ./backend:/app
    environment:
      - PYTHONPATH=/app
    env_file:
      - financial.env
    depends_on:
      mysql-financial:
        condition: service_healthy # 避免 mysql 尚未準備好就開始連線
      mongo-financial:
        condition: service_started
      redis-financial:
        condition: service_started
    restart: on-failure

  celery-worker:
    container_name: celery-worker
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.celery worker --loglevel=info
    depends_on:
      mysql-financial:
        condition: service_healthy # 避免 mysql 尚未準備好就開始連線
      mongo-financial:
        condition: service_started
      redis-financial:
        condition: service_started
    volumes:
      - ./backend:/app
    env_file:
      - financial.env

  frontend-financial:
    container_name: frontend-financial
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev # 生產環境要換另一份 dockerfile
    ports:
      # - "5173:80" # 此 port 設定是生產環境的設定 (nginx 會監聽 port 80)
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules # 避免本地 node_modules 覆蓋容器內的
    # command: npm run dev
    environment:
      - NODE_ENV=development
    env_file:
      - financial.env
    depends_on:
      - backend-financial
    stdin_open: true
    tty: true

  mysql-financial:
    container_name: mysql-financial
    image: mysql:8.0
    restart: always
    env_file:
      - financial.env
    ports:
      - "32221:3306"
    volumes:
      - ./financial-mysql:/var/lib/mysql
    healthcheck: # 確保 mysql 已經啟動再啟動後端容器
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5

  mongo-financial:
    container_name: mongo-financial
    image: mongo:latest
    restart: always
    env_file:
      - financial.env
    ports:
      - "32226:27017"
    volumes:
      - ./financial-mongo:/data/db

  redis-financial:
    container_name: redis-financial
    image: redis:latest
    restart: always
    env_file:
      - financial.env
    ports:
      - "32227:6379"
